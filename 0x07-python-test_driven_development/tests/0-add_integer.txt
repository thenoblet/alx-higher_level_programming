>>> add_integer = __import__('0-add_integer').add_integer


====================================================
	Test for expected behaviour
====================================================

>>> add_integer(3, 4)
7
>>> add_integer(3)
101
>>> add_integer(3, -10)
-7
>>> add_integer(0, 0)
0
>>> add_integer(-100, -3)
-103
>>> add_integer(9.8)
107
>>> add_integer(3, 4.5)
7

===================================================
	Testing for edge cases
===================================================

===Testing for overflow ===
add_integer(-(2**31), -1)
Traceback (most recent call last):
...
OverflowError: Number too large

add_integer(2**31 - 1, 1)
Traceback (most recent call last):
...
OverflowError: Number too large

>>> add_integer(float("inf"))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

=== Passing strings and other non-numeric types as arguments ===
>>> add_integer("3", "2")
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer([1, 2, 3], 2)
Traceback (most recent call last):
...
TypeError: a must be an integer

=== empty, default and non-default arguments ===
>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(b=5)
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer

================================================
		ALX Tests
================================================
>>> add_integer(1, 2)
3
>>> add_integer(100, -2)
98
>>> add_integer(2)
100
>>> add_integer(100.3, -2)
98
>>> add_integer(-2, 100.3)
98
>>> add_integer(4, "School")
Traceback (most recent call last):
...
TypeError: b must be an integer
>>> add_integer("Best", "School")
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer
